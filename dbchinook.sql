
--2.1
SELECT* FROM EMPLOYEE WHERE LASTNAME = 'King';
SELECT* FROM EMPLOYEE WHERE FIRSTNAME = 'ANDREW' AND REPORTSTO = NULL;

--2.2
SELECT* FROM ALBUM ORDER BY TITLE DESC;
SELECT FIRSTNAME FROM CUSTOMER ORDER BY CITY ASC;

--2.3
INSERT INTO GENRE (GENREID, NAME) VALUES (26, 'Jam');
INSERT INTO GENRE (GENREID, NAME) VALUES (27, 'Dubstep');
INSERT INTO EMPLOYEE (EMPLOYEEID, LASTNAME, FIRSTNAME, TITLE, REPORTSTO, BIRTHDATE, HIREDATE, ADDRESS, CITY, STATE, COUNTRY, POSTALCODE, PHONE, FAX, EMAIL) VALUES (9, 'Bisgrove', 'Dave', 'Intern', 6, '10-MAY-94', '27-JUN-18', '1323 Delaware TPK', 'Albany', 'NY', 'United States', '12054', '+1 (518) 312-5945', '+1 (518) 312-3160', 'bisgrovd1@hawkmail.newpaltz.edu');
INSERT INTO EMPLOYEE (EMPLOYEEID, LASTNAME, FIRSTNAME, TITLE, REPORTSTO, BIRTHDATE, HIREDATE, ADDRESS, CITY, STATE, COUNTRY, POSTALCODE, PHONE, FAX, EMAIL) VALUES (10, 'Shelton', 'Matt', 'Accountant', 1, '1-AUG-94', '27-JUN-18', '15 Mulberry ST', 'New Paltz', 'NY', 'United States', '12561', '+1 (526) 845-5965', '+1 (526) 845-3129', 'shelton1@hawkmail.newpaltz.edu');
INSERT INTO CUSTOMER (CUSTOMERID, FIRSTNAME, LASTNAME, ADDRESS, CITY, COUNTRY, POSTALCODE, PHONE, EMAIL, SUPPORTREPID)
VALUES (60, 'Emma', 'Bruno', '19 Apple RD', 'New Paltz', 'United States', 12561, '+1 (845) 594-2304', 'Brunoe2@hawkmail.newpaltz.edu', 3); 
INSERT INTO CUSTOMER (CUSTOMERID, FIRSTNAME, LASTNAME, ADDRESS, CITY, COUNTRY, POSTALCODE, PHONE, EMAIL, SUPPORTREPID)
VALUES (61, 'Steve', 'Roberts', '19 Apple RD', 'New Paltz', 'United States', 12561, '+1 (845) 619-2524', 'Robertss1@hawkmail.newpaltz.edu', 3); 

--2.4
UPDATE CUSTOMER SET FIRSTNAME = 'Robert', LASTNAME = 'Walter' WHERE FIRSTNAME = 'Aaron' AND LASTNAME = 'Mitchell';
UPDATE ARTIST SET NAME = 'CCR' WHERE NAME = 'Creedence Clearwater Revival';

--2.5
SELECT* FROM INVOICE WHERE BILLINGADDRESS LIKE 'T%';

--2.6
SELECT* FROM INVOICE WHERE TOTAL BETWEEN 15 AND 50;
SELECT* FROM EMPLOYEE WHERE HIREDATE BETWEEN '01-JUN-03' AND '01-MAR-04';

--2.7
DELETE FROM INVOICELINE WHERE INVOICEID IN(SELECT INVOICEID FROM INVOICE WHERE CUSTOMERID = (SELECT CUSTOMERID FROM CUSTOMER WHERE FIRSTNAME = 'Robert' AND LASTNAME = 'Walter'));
DELETE FROM INVOICE WHERE CUSTOMERID = (SELECT CUSTOMERID FROM CUSTOMER WHERE FIRSTNAME = 'Robert' AND LASTNAME = 'Walter');
DELETE FROM CUSTOMER WHERE FIRSTNAME = 'Robert' AND LASTNAME = 'Walter';

--3.1
SELECT CURRENT_TIMESTAMP FROM DUAL;
SELECT LENGTH(NAME) AS LENGTHOFNAME FROM MEDIATYPE;

--3.2
SELECT AVG(TOTAL) FROM INVOICE;
SELECT NAME, UNITPRICE FROM TRACK WHERE UNITPRICE = (SELECT MAX(UNITPRICE) FROM TRACK);
SELECT AVG(UNITPRICE) FROM INVOICELINE;
--3.3
SELECT AVG(UNITPRICE) FROM INVOICELINE;

CREATE OR REPLACE FUNCTION AVG_PRICE(PRICE NUMBER)
    RETURN NUMBER AS AVERAGE NUMBER(10,2);
    BEGIN
        SELECT AVG(UNITPRICE) INTO AVERAGE FROM INVOICELINE;
        RETURN AVERAGE;
    END;
/
AVG_PRICE(1);

--3.4
SELECT* FROM EMPLOYEE WHERE BIRTHDATE >= '01-JAN-1969';

--4.1

--4.2
/*
SELECT* FROM EMPLOYEE;
CREATE OR REPLACE PROCEDURE UPDATE_EMPLOYEE_INFO
(
    TEMPLOYEEID IN NUMBER,
    TLASTNAME IN VARCHAR2,
    TFIRSTNAME IN VARCHAR2,
    TADDRESS IN VARCHAR2,
    TCITY IN VARCHAR2,
    TSTATE IN VARCHAR2,
    TCOUNTRY IN VARCHAR2,
    TPOSTALCODE IN VARCHAR2,
    TPHONE IN VARCHAR2,
    TFAX IN VARCHAR2,
    TEMAIL IN VARCHAR2,
    UPDATED_ROW OUT SYS_REFCURSOR
)
AS
BEGIN
    UPDATE EMPLOYEE
    SET LASTNAME = TLASTNAME, FIRSTNAME = TFIRSTNAME, ADDRESS = TADDRESS, CITY = TCITY, STATE = TSTATE, COUNTRY = TCOUNTRY, POSTALCODE = TPOSTALCODE, PHONE = TPHONE, FAX = TFAX, EMAIL = TEMAIL;
    OPEN UPDATED_ROW FOR SELECT* FROM EMPLOYEE
    WHERE EMPLOYEEID = TEMPLOYEEID;
END;
/

DECLARE
    TEMPLOYEEID NUMBER;
    TLASTNAME VARCHAR2(255);
    TFIRSTNAME VARCHAR2(255);
    TADDRESS VARCHAR2(255);
    TCITY VARCHAR2(255);
    TSTATE VARCHAR2(255);
    TCOUNTRY VARCHAR2(255);
    TPOSTALCODE VARCHAR2(255);
    TPHONE VARCHAR2(255);
    TFAX VARCHAR2(255);
    TEMAIL VARCHAR2(255);
    UPDATED_ROW SYS_REFCURSOR;
BEGIN
    TEMPLOYEEID := 1;
    TLASTNAME := 'ADAMS';
    TFIRSTNAME :='ANDREW';
    TADDRESS :='1120 JASPER AVE NW';
    TCITY :='EDMONTON';
    TSTATE :='AB';
    TCOUNTRY :='CANADA';
    TPOSTALCODE :='T5K 2N1';
    TPHONE :='+1 (780) 428-9482';
    TFAX :='+1 (780) 428-3457';
    TEMAIL := 'ANDREW@CHINOOKCORP.COM';
    UPDATE_EMPLOYEE_INFO(LASTNAME = LASTNAME, FIRSTNAME = TFIRSTNAME, ADDRESS = TADDRESS, CITY = TCITY, STATE = TSTATE, COUNTRY = TCOUNTRY, POSTALCODE = TPOSTALCODE, PHONE = TPHONE, FAX = TFAX, EMAIL = TEMAIL);
    LOOP
        FETCH UPDATED_ROW INTO TLASTNAME, TFIRSTNAME, TADDRESS, TCITY, TSTATE, TCOUNTRY, TPOSTALCODE, TPHONE, TFAX, TEMAIL;
    EXIT WHEN UPDATED_ROW%NOTFOUND;
    END LOOP;
    CLOSE UPDATED_ROW;
END;
/
    
SET SERVEROUTPUT ON;
*/






6.1
/*
CREATE OR REPLACE TRIGGER AFTERINSERT ON EMPLOYEE
FOR INSERT
AS DECLARE 
    @EMPLOYEEID NUMBER,
    @LASTNAME VARCHAR2(255),
    @FIRSTNAME VARCHAR2(255),
    @ADDRESS VARCHAR2(255),
    @CITY VARCHAR2(255),
    @STATE VARCHAR2(255),
    @COUNTRY VARCHAR2(255),
    @POSTALCODE VARCHAR2(255),
    @PHONE VARCHAR2(255),
    @FAX VARCHAR2(255),
    @EMAIL VARCHAR2(255);
*/

--7.1
/*
SELECT CUSTOMER.FIRSTNAME, CUSTOMER.LASTNAME, INVOICE.INVOICEID
FROM CUSTOMER 
INNER JOIN INVOICE ON CUSTOMER.CUSTOMERID = INVOICE.CUSTOMERID;

SELECT CUSTOMER.FIRSTNAME, CUSTOMER.LASTNAME, INVOICE.INVOICEID, INVOICE.INVOICEID
FROM CUSTOMER 
LEFT JOIN INVOICE ON CUSTOMER.CUSTOMERID = INVOICE.CUSTOMERID;


SELECT ARTIST.NAME, ALBUM.TITLE
FROM ALBUM 
RIGHT JOIN ARTIST ON ALBUM.ARTISTID = ARTIST.ARTISTID;


SELECT ARTIST.NAME, ALBUM.TITLE
FROM ALBUM 
CROSS JOIN ARTIST
ORDER BY ARTIST.NAME ASC;

SELECT DISTINCT A.LASTNAME AS LASTNAME1, A.FIRSTNAME AS FIRSTNAME1, B.LASTNAME AS LASTNAME2, B.FIRSTNAME AS FIRSTNAME2
FROM EMPLOYEE A, EMPLOYEE B
WHERE A.REPORTSTO = B.EMPLOYEEID
*/